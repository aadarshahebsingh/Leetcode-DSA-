/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int lenofLL(ListNode* head){
        ListNode* temp=head;
        int len=0;
        while(temp->next!=NULL){
            len++;
            temp=temp->next;
        }
        return len;
    }
    ListNode* deleteMiddle(ListNode* head) {
        if(head==NULL or head->next==NULL){
            head=NULL;
            return head;
        }   
        int len=lenofLL(head);
        int cnt=0;
        int  mid=len/2;
        if(len%2!=0){
            mid++;
        }
        cout<<len<<" "<<mid<<endl;
        ListNode* temp=head;
        while(cnt<mid-1){
            temp=temp->next;
            cout<<temp->val<<endl;
            cnt++;
        }
        // if(temp->next-)
        if(temp->next==NULL){
            return head;
        }
        temp->next=temp->next->next;
        return  head;
    }
};
