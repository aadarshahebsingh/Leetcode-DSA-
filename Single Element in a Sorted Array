class Solution
{
public:
	int singleNonDuplicate(vector<int> &nums)
	{
		if (nums.size() == 1)
			return nums[0];
		int start = 0, end = nums.size() - 1;
		if (nums[0] != nums[1])
			return nums[0];
		if (nums[end - 1] != nums[end])
			return nums[end];
        start=2;
        end=nums.size()-3;
		while(start<=end)
		{
			int mid = (start + end) / 2;
			if (nums[mid] != nums[mid + 1] and nums[mid] != nums[mid - 1])
				return nums[mid];
			if (nums[mid] == nums[mid - 1])
				mid--;
			if (mid % 2 == 0)
				start = mid + 2;
			else
				end = mid - 1;
		}
		// return start;
		return nums[start];
	}
};
