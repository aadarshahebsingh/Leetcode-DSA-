// Approach 1

class Solution {


public:
    bool canJump(vector<int>& nums) {
        int n=nums.size();
        if(n==1)return true;
        // if(nums[0]==0)return false;
        int cnt=INT_MIN;
        for(int i=0;i<n;i++){
            
            if(nums[i]>cnt){
                cnt=nums[i];
                if(cnt==0 and i!=n-1)return false;
                else {
                    cnt--;
                    continue;
                }
            }
            else if(cnt==0 and i==n-1)return true;
            else if(cnt==0)return false;
            // cout<<cnt<<endl;
            cnt--;
        }
        return true;
    }
};


// Approach 2

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n=nums.size();
        int lastPosition=n-1;
        for(int i=n-1;i>=0;i--){
            if(i+nums[i]>=lastPosition)lastPosition=i;
            
        }
        if(lastPosition==0)return true;
        return false;
    }
};
