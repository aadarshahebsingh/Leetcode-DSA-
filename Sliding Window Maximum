class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> dq;
        vector<int> ans;
        // int temp=INT_MIN;
        // dq.push_back(0);
        // cout<<dq.front()<<endl;
        // if(dq.empty())cout<<"hello"<<endl;
        for(int i=0;i<nums.size();i++){
            // cout<<i-k+1<<endl;
            
            while(!dq.empty() and i-k+1> dq.front()) dq.pop_front();
            while(!dq.empty() and nums[i] > nums[dq.back()]) dq.pop_back();
            dq.push_back(i);
            if(i>=k-1){
                ans.push_back(nums[dq.front()]);
            }
            // cout<<dq.back()<<endl;
        }
        return ans;
    }
};
