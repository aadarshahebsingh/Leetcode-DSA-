/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode* curr,ListNode* prev){
        if(curr==NULL){
            // head=prev;
            return prev;
        }
        ListNode* forward=curr->next;
        curr->next=prev;
        return reverse(forward,curr);
    }
    ListNode* reverseList(ListNode* head) {
        if(head==NULL or head->next==NULL){
            return head;
        }
        ListNode* prev=NULL;
        ListNode* curr=head;
        ListNode* ans=reverse(curr,prev);
        // cout<<head->next<<endl;
        return ans;
    }
};
