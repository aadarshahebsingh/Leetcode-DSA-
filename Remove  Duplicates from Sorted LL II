/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    // bool check(ListNode* head)
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==NULL or head->next==NULL){
            return head;
        }
        ListNode* temp=head;
        ListNode* curr;
        while(temp->next!=NULL){
            if(head->val==head->next->val){
                while(temp->val==temp->next->val){
                    temp=temp->next;
                    if(temp->next==NULL){
                        head=NULL;
                        return head;
                    }
                }
                curr=temp->next;
                head=curr;
                temp=curr;
            }
            else if(temp->val!=temp->next->val){
                curr=temp;
                temp=temp->next;
            }
            else if(temp->val==temp->next->val){
                while(temp->val==temp->next->val){
                    temp=temp->next;
                    if(temp->next==NULL){
                        curr->next=NULL;
                        break;
                    }
                }
                curr->next=temp->next;
                temp=curr;
            }
        }return head;
    }
};
