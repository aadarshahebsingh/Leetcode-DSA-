#include  <stack>
using namespace std;
class MinStack {
    stack<int> s;
    long long int mini;
public:
// return ans;

    MinStack() {
        
    }
    
    void push(int val) {
        // agr pehle element  h to
        if(s.empty()){
            s.push(val);
            mini=val;
        }
        else {
            if(val<mini){
                long long int data=2LL*val-mini;
                s.push(data);
                mini=val;
            }
            else{
                s.push(val);
            }
        }
        
    }
    
    void pop() {
        if(s.empty())return ;
        long long int curr=s.top();
        s.pop();
        if(curr<mini){
            mini=2LL *mini-curr;
        }
    }
    
    int top() {
        if(s.empty())return -1;
        long long int curr=s.top();
        if(curr<mini){
            return mini;
        }
        else{
            return curr;
        }
    }
    // bool isEmpty(){
    //     // Implement the  isEmpty() function
    // }
    
    int getMin() {
        if(s.empty())return -1;
        else{
            return mini;
        }
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
